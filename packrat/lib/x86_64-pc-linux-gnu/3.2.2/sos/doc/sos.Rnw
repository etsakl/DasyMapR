\documentclass[a4paper]{report}

%% need no \usepackage{Sweave}

\usepackage{RJournal}
%\usepackage[noae]{Sweave}
\usepackage[round]{natbib}
%\bibliographystyle{abbrvnat}
\SweaveOpts{keep.source=TRUE}
<<echo=FALSE>>=
options(width = 60, useFancyQuotes = FALSE)
options(repos=c(CRAN="http://cran.cnr.berkeley.edu"))
@
\begin{document}
%\VignetteIndexEntry{sos R Journal article}
%\VignetteDepends{sos}
%\VignetteKeywords{help, search}
%\VignettePackage{sos}

\begin{article}
\title{Searching help pages of R packages}
\author{by Spencer Graves, Sundar Dorai-Raj, and Romain Fran\c{c}ois}

\maketitle

\abstract{
The \CRANpkg{sos} package provides a means to quickly and
flexibly search the help pages of contributed packages, finding
functions and datasets in seconds or minutes that could not be
found in hours or days by any other means we know.  Its
{\tt findFn} function accesses Jonathan Baron's \emph{R Site Search}
database and returns the matches in a data frame of class
{\tt "findFn"}, which can be further manipulated by other
\CRANpkg{sos} functions to produce, for example, an Excel file
that starts with a summary sheet that makes it relatively
easy to prioritize alternative packages for further study.
As such, it provides a very powerful way to do a literature
search for functions and packages relevant to a particular topic
of interest and could become virtually mandatory for authors
of new packages or papers in publications such as \emph{The R Journal}
and the \emph{Journal of Statistical Software}.
}
\section{Introduction}
The \CRANpkg{sos} package provides a means to quickly and flexibly
search the help pages of contributed packages, finding
functions and datasets in seconds or minutes that could not be
found in hours or days by any other means we know.

The main capability of this package is the {\tt findFn} function,
which scans the ``function'' entries in Jonathan Baron's \emph{R site search}
database \citep{JB09URL} and returns the matches in a data frame of class
{\tt "findFn"}.  Baron's site is one of five
search capabilities currently identified under "Search" from the main
\url{http://www.r-project.org/} web site.  It includes options to
search the help pages of R packages contributed to CRAN (the
Comprehensive R Archive Network) plus a few other publicly
available packages, as well as selected mailing list archives---primarily
R-help.  The {\tt findFn} function focuses only
on the help pages in this database.  (CRAN grew from 1700 contributed
packages and bundles on 2009-03-11 to 1954 on 2009-09-18,
adding over 40 packages per day, an annual growth rate of 31 percent.)

The {\tt print} method for objects of class {\tt "findFn"}
displays the results as a table in a web
browser with links to the individual help pages, sorted by package,
displaying the results from the package with the most matches first.  This
behaviour differs from that of the {\tt RSiteSearch} function in the
\pkg{utils} package in more ways than the sort order.  First, {\tt findFn}
returns the results in R as a data frame, which can be further
manipulated.  Second, the ultimate display in a web browser is a
table, unlike the list produced by {\tt RSiteSearch}.

Other \CRANpkg{sos} functions provide summaries with one line for each
package, support the union and intersection of {\tt "findFn"} objects,
and translate a \code{"findFn"} object into an Excel file with three sheets:
(1) \strong{PackageSum2}, which provides an enhanced summary of the packages
with matches, (2) the \strong{findFn} table itself, and (3) the \strong{call}
used to produce it.

Three examples are considered below:  First we find a data set
containing a variable {\tt Petal.Length}. Second, we study
R capabilities for splines, including looking for a function
named {\tt spline}.  Third, we search for contributed R packages
 with capabilities for solving differential equations.

\section{Finding a variable in a data set}

\citet[pp. 282-283]{JC09} uses a variable {\tt Petal.Length} from a
famous Fisher data set but without naming the data set nor indicating
where it can be found nor even if it exists in any contributed R
package.  The sample code he provides does not work by itself.  To get
his code to  work to produce his Figure 7.2, we must first obtain a
copy of this famous data set in a format compatible with his code.

To look for this data set, one might first try
the {\tt help.search} function.  Unfortunately, this function
returns nothing in this case:
<<Petal.Length>>=
help.search('Petal.Length')
@
When this failed, many users might then try
<<PL.RSiteSearch>>=
RSiteSearch('Petal.Length')
@
This produced 80 matches
when it was tried one day (and 62 matches a few months later).
{\tt RSiteSearch(`Petal.Length', `function')} will identify
only the help pages.  We can get something similar and for
many purposes more useful, as follows:
<<Petal.Length.sos>>=
library(sos)
PL <- findFn('Petal.Length')
@
{\tt PL} is a data frame of class {\tt "findFn"} identifying
all the help pages in Jonathan Baron's data base matching the
search term.  An alias for {\tt findFn} is {\tt ???}, and this same
search can be performed as follows:
<<Petal.Length.sos.2>>=
PL <- ???Petal.Length
@
(The {\tt ???} alias only works in an assignment, so to print
immediately, you need something like {\tt (PL <- ???Petal.Length)}.)

This data frame has columns {\tt Count},
{\tt MaxScore}, {\tt TotalScore}, {\tt Package}, {\tt Function},
{\tt Date}, {\tt Score}, {\tt Description}, and {\tt Link}.
{\tt Function} is the name of the help page, not the name of the
function, as multiple functions may be documented on a single
help page, and some help pages document other things such as data
sets.  {\tt Score} is the index of the strength of the match.  It is used
by Baron's search engine to decide which items to display first.
{\tt Package} is the name of the package containing {\tt Function}.
{\tt Count} gives the total number of matches in {\tt Package} found in this
{\tt findFn} call.  By default, the {\tt findFn} object is sorted by
{\tt Count}, {\tt MaxScore}, {\tt TotalScore},
and {\tt Package} (to place the most important {\tt Package}
first), then by {\tt Score} and {\tt Function}.

The {\tt summary} method for such an object prints a table giving
for each {\tt Package} the {\tt Count} (number of matches),
{\tt MaxScore} (max of {\tt Score}), {\tt TotalScore} (sum of
{\tt Score}), and {\tt Date}, sorted like a Pareto chart to place
the {\tt Package} with the most help pages first:
<<summary.PL,results=hide>>=
# the following table has been
# manually edited for clarity
summary(PL)
@
<<summary.PL-print,echo=FALSE>>=
s <- summary(PL)
blank <- data.frame(Package = "<...>",
                    Count = "", MaxScore = "",
                    TotalScore = "",
                    Date = "")
s$PackageSummary[] <- lapply(s$PackageSummary[], as.character)
row.names(s$PackageSummary) <-
  as.character(s$PackageSummary$Package)
s$PackageSummary <- rbind(s$PackageSummary['yaImpute', ],
                          blank,
                          s$PackageSummary['datasets', ],
                          blank)
print(s, row.names = FALSE)
@
(The {\tt Date} here is the date that this package was added
to Baron's database.)

One of the listed packages is \pkg{datasets}.  Since it is part of the
default R distribution, we decide to look there first.  We can
select that row of PL just like we would select a row from any other
data frame:
<<Petal.Length.sos.3,results=hide>>=
PL[PL$Package == 'datasets', 'Function']
@
<<Petal.Length.sos.3-print,echo=FALSE>>=
print(PL[PL$Package == 'datasets', 'Function'], max.levels = 0)
@
Problem solved in less than a minute!  Any other method known
to the present authors would have taken substantially more time.

\section{Finding packages with spline capabilities}

Almost four years ago, the lead author of this article decided he
needed to learn more about splines.  A literature search
began as follows:
<<RSiteSearch-spline,results=hide>>=
RSiteSearch('spline')
@
<<RSiteSearch-spline-numpages,results=hide,echo=FALSE>>=
getRSiteSearchHits <- function(description) {
  today <- format(Sys.time(), "%Y-%m-%d")
  con <- url(description)
  on.exit(close(con))
  lines <- try(readLines(con))
  if(class(lines) == 'try-error'){
    return(list(hits=0, date=today))
  }
  pattern <- "^.*<!-- HIT -->([0-9]+)<!-- HIT -->.*$"
  hits <- sub(pattern, "\\1", lines[grep(pattern, lines)])
  list(hits = hits, date = today)
}
splineHits <- getRSiteSearchHits("http://search.r-project.org/cgi-bin/namazu.cgi?query=spline&max=20&result=normal&sort=score&idxname=Rhelp08&idxname=functions&idxname=views")
@
(using the {\tt RSiteSearch} function in the \pkg{utils} package).
While preparing this manuscript, this command identified
\Sexpr{splineHits$hits} documents as of \Sexpr{splineHits$date}.  That is too many.  It can be
restricted to functions as follows:
<<RSiteSearch-spline-fun,results=hide>>=
RSiteSearch('spline', 'fun')
@
<<RSiteSearch-spline-fun-numpages,results=hide,echo=FALSE>>=
splineFunHits <- getRSiteSearchHits("http://search.r-project.org/cgi-bin/namazu.cgi?query=spline&max=20&result=normal&sort=score&idxname=functions")
@
This identified only \Sexpr{splineFunHits$hits} one day (631 a few months earlier).
That's an improvement over \Sexpr{splineHits$hits} but is still too many.
To get a quick overview of these \Sexpr{splineFunHits$hits}, we can proceed
as follows:
<<sos-spline,results=hide>>=
splinePacs <- findFn('spline')
@
This downloaded a summary of the \Sexpr{nlevels(splinePacs$Link)} highest-scoring help pages
in the 'RSiteSearch' data base in roughly 5-15 seconds, depending
on the speed of the Internet connection.  To get all  \Sexpr{splineFunHits$hits}  matches,
increase the {\tt maxPages} argument from its default 20:
<<sos-spline-maxPages-999,results=hide>>=
splineAll <- findFn('spline', maxPages = 999)
@

If we want to find a function named {\tt spline}, we can
proceed as follows:
<<sos-spline-subset,results=hide>>=
selSpl <- splineAll[, 'Function'] == 'spline'
splineAll[selSpl, ]
@

This has 0 rows, because there is no help page named
{\tt spline}.  This does not mean that no function
with that exact name exists, only that no help page
has that name.

To look for help pages whose name includes the characters
\samp{spline}, we can use {\tt grepFn}:
<<sos-spline-grep,results=hide>>=
grepFn('spline', splineAll, ignore.case = TRUE)
@
<<sos-spline-grep,results=hide,echo=FALSE>>=
g <- grepFn('spline', splineAll, ignore.case = TRUE)
gFunc6 <- as.character(g[6, "Function"])
gPac6 <- as.character(g[6, "Package"])
gScore6 <- g[6, "Score"]
gCount6 <- g[6, "Count"]
@

This returned a {\tt "findFn"} object identifying \Sexpr{nrow(g)} help pages.
When this was
run while preparing this manuscript, the sixth row was
{\tt \Sexpr{gFunc6}} in the
\pkg{\Sexpr{gPac6}} package, which has a {\tt Score} of \Sexpr{gScore6}.
(On another day, the results could be different, because
CRAN changes over time.)  This was the sixth row in this
table, because it is in the
\pkg{\Sexpr{gPac6}} package, which had a total of \Sexpr{gCount6} help
pages matching the search term, but this was the only
one whose name matched the {\tt pattern} passed to {\tt grepFn}.

We could next {\tt print} the {\tt splineAll} {\tt "findFn"}
object.  However, it may not be easy to digest a table
with \Sexpr{nrow(g)} rows.

{\tt summary(splineAll)} would tell us that the \Sexpr{nrow(splineAll)}  help pages
came from \Sexpr{nlevels(splineAll$Package)} different packages and display the first
{\tt minPackages = 12} such packages.
(If other packages had the same number of
matches as the twelfth package, they would also appear in this
summary.)

A more complete view can be obtained in MS Excel format
using the {\tt writeFindFn2xls} function:

<<writeFindFn2xls-options,echo=FALSE>>=
op <- options(width = 80)
@
<<writeFindFn2xls,results=hide>>=
writeFindFn2xls(splineAll)
@
<<writeFindFn2xls-options,echo=FALSE>>=
options(op)
@
({\tt findFn2xls} is an alias for {\tt writeFindFn2xls}.
We use the longer version here, as it may be
easier to remember.)

If either the \CRANpkg{WriteXLS} package and compatible Perl code
are properly installed or if you are running Windows with
the \CRANpkg{RODBC} package, this produces an Excel file in the
working directory named \file{splineAll.xls}, containing the
following three worksheets:

\begin{itemize}
\item{The \strong{PackageSum2} sheet includes one line for each
package with a matching help page, enhanced by providing
information for locally installed packages
not available in the {\tt "findFn"} object.}
\item{The \strong{findFn} sheet contains the search results.}
\item{The \strong{call} sheet gives the call to {\tt findFn}
that generated these search results.}
\end{itemize}

If {\tt writeFindFn2xls} cannot produce an Excel file with
your installation, it will write three \file{csv} files with
names \file{splineAll-sum.csv}, \file{splineAll.csv}, and
\file{splineAll-call.csv}, corresponding to the three
worksheets described above. (Users who do not have MS Excel
may like to know that Open Office Calc can open a standard
\file{xls} file and can similarly create such files
\citep{CALC09MAN}.)

The \strong{PackageSum2} sheet is created by the
\code{PackageSum2} function, which adds information from
installed packages not obtained by
{\tt findFn}.  The extended summary includes the package title and date, plus
the names of the author and the maintainer, the number of help pages
in the package,
and the name(s) of any vignettes.  This can be quite
valuable in prioritizing packages for further study.
Other things being equal, we think most people would
rather learn how to use a package being actively maintained
than one that has not changed in five years.  Similarly,
we might prefer to study a capability in a larger package
than a smaller one, because the rest of the package might
provide other useful tools or a broader context for
understanding the capability of interest.

These extra fields, package title, etc., are blank for
packages in the {\tt "findFn"} object not installed locally.
For installed packages, the {\tt Date} refers to the \emph{packaged} date rather
than the date the package was added to Baron's database.

Therefore, the value of {\tt PackageSum2} can be
increased by running {\tt install.packages} (from the
\pkg{utils} package) to install packages not currently
available locally and {\tt update.packages()} to ensure the
local availability of the latest versions for all
installed packages.

To make it easier to add desired packages,
the \CRANpkg{sos} package includes
an {\tt installPackages} function, which checks all the
packages in a {\tt "findFn"} object for which
the number of matches exceeds a second argument {\tt minCount}
and installs any of those not already available locally;  the
default {\tt minCount} is the square root of the largest
{\tt Count}.  Therefore, the results from {\tt PackageSum2} and the
\strong{PackageSum2} sheet created by {\tt writeFindFn2xls} will typically
contain more information after running {\tt installPackages}
than before.

To summarize, three lines of code gave us a very powerful
summary of spline capabilities in contributed R
packages:

<<install-and-write-options,echo=FALSE>>=
op <- options(width=80)
@
<<install-and-write,results=hide>>=
splineAll <- findFn('spline', maxPages = 999)
# Do not include in auto test
#installPackages(splineAll)
writeFindFn2xls(splineAll)
@
<<install-and-write-options-undo,echo=FALSE>>=
options(op)
@

The resulting \file{splineAll.xls} file can help establish priorities
for further study of the different packages and functions.  An
analysis of this nature almost four years ago led the lead author
to the \CRANpkg{fda} package and its companion books, which further
led to a collaboration that has produced joint presentations at
three different conferences and a joint book \citep{RHG09}.

\section{Combining search results}

The lead author of this article recently gave an invited presentation
on ``Fitting Nonlinear Differential Equations to Data in R''\footnote{Workshop
on Statistical Methods for Dynamic System Models, Vancouver, 2009: \url{http://stat.sfu.ca/~dac5/workshop09/Spencer_Graves.html}}.
A key part of preparing for that presentation was a search of
contributed R code, which proceeded roughly as follows:

<<differntial-equations,results=hide>>=
de <- findFn('differential equation')
des <- findFn('differential equations')
de. <- de | des
@

The object {\tt de} has \Sexpr{nrow(de)} rows, while {\tt des} has \Sexpr{nrow(des)}.
If this search engine were simply searching for character
strings, {\tt de} would be larger than {\tt des}, rather than
the other way around.  The last object {\tt de.}\ is the union
of {\tt de} and {\tt des};  \samp{|} is an alias for {\tt unionFindFn}.
The {\tt de.}\ object has \Sexpr{nrow(de.)} rows, which suggests that
the corresponding intersection must have (\Sexpr{nrow(de)} + \Sexpr{nrow(des)} $-$ \Sexpr{nrow(de.)} = \Sexpr{nrow(de) + nrow(des) - nrow(de.)}). This can be confirmed via {\tt nrow(de \& des)}.
(\samp{\&} is an alias for {\tt intersectFindFn}.)

To make everthing in {\tt de.}\ locally available, we can use
{\tt installPackages(de., minCount = 1)}.  This installed all
referenced packages except {\tt rmutil} and a dependency {\tt Biobase},
which were not available on CRAN but are included in Jonathan
Baron's R Site Search data base.

Next, {\tt writeFindFn2xls(de.)}\ produced a file \file{de..xls}
in the working directory.  (The working directory can be
identified via {\tt getwd()}.)

The \strong{PackageSum2} sheet of that Excel file provided a quick
summary of packages with matches, sorted to put the package
with the most matches first.  In this case, this first package
was \CRANpkg{deSolve}, which provides, ``General solvers for initial
value problems of ordinary differential equations (ODE),
partial differential equations (PDE) and differential
algebraic equations (DAE)''.  This is clearly quite relevant
to the subject.  The second package was \CRANpkg{PKfit}, which
is ``A Data Analysis Tool for Pharmacokinetics''.  This may
be too specialized for general use.  I therefore would not
want to study this first unless my primary interest here was in
pharmacokinetic models.

By studying the summary page in this way, I was able to decide
relatively quickly which packages I should consider first.  In
making this decision, I gave more weight to packages with
one or more vignettes and less weight to those where the
{\tt Date} was old, indicating that the code was not being
actively maintained and updated.  I also checked the conference
information to make sure I did not embarrass myself by overlooking
a package authored or maintained by another invited speaker.

\section{Discussion}
We have found {\tt findFn} in the \CRANpkg{sos} package to
be very quick, efficient and effective for finding things in
contributed packages.  The {\tt grepFn} function helps quickly
look for functions (or help pages) with particular names.
The capabilities in {\tt unionFindFn} and {\tt intersectFindFn}
(especially via their \samp{|} and \samp{\&} aliases) can be quite useful
where a single search term seems inadequate;  they make it easy
to combine multiple searches to produce something closer to what
is desired.  An example of this was provided with searching for
both ``differential equation'' and ``differential equations''.

The \strong{PackageSum2} sheet of an Excel file produced by
{\tt writeFindFn2xls} (after also running the {\tt installPackages}
function) is quite valuable for understanding the
general capabilities available for a particular topic.
This could be of great value for authors to find what is already
available so they don't duplicate something that already exists
and so their new contributions appropriately consider
the contents of other packages.

The {\tt findFn} capability can also reduce the risk
of ``the researcher's nightmare'' of being told after
substantial work that someone else has already done it.

Users of \CRANpkg{sos} may also wish to consult Crantastic
(\url{http://www.crantastic.org/}), which allows users to tag, rate,
and view packages.  (The coverage of Crantastic includes current and
orphaned CRAN packages, while \cite{JB09URL}
also includes 'most of the default packages from Bioconductor and all
of Jim Lindsey's packages.')


\section{Acknowledgments}
The capabilities described here extend the power of the
R Site Search search engine maintained by Jonathan Baron.
Without Prof. Baron's support, it would not have been feasible
to develop the features described here. Duncan Murdoch, Marc Schwarz,
Dirk Eddelbuettel, Gabor Grothendiek and anonymous
referees contributed suggestions for improvement, but of course
can not be blamed for any deficiencies.  The collaboration
required to produce the current \CRANpkg{sos} package was greatly
facilitated by R-Forge \citep{RFORGE09URL}. The \CRANpkg{sos} package
is part of the R Site Search project hosted there.  This project
also includes code for a Firefox extension to simplify the process of
finding information about R from within Firefox.  This Firefox
extension is still being developed with the current version
downloadable from \url{http://addictedtor.free.fr/rsitesearch}\,.

\begin{thebibliography}{6}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{\texttt{#1}}
\expandafter\ifx\csname urlstyle\endcsname\relax
  \providecommand{\doi}[1]{doi: #1}\else
  \providecommand{\doi}{doi: \begingroup \urlstyle{rm}\Url}\fi

\bibitem[Baron(2009)]{JB09URL}
J.~Baron.
\newblock R site search.
\newblock URL \url{http://finzi.psych.upenn.edu/ search.html}, September 2009.

\bibitem[Chambers(2009)]{JC09}
J.~Chambers.
\newblock \emph{Software for Data Analysis: Programming with R}.
\newblock Springer, New York, 2009.

%\bibitem[Graves et~al.(2009)Graves, Hooker, and Ramsay]{GHR09}
%S.~Graves, G.~Hooker, and J.~Ramsay.
%\newblock Fitting nonlinear differential equations to data in R.
%\newblock URL \url{http://stat.sfu.ca/~dac5/workshop09/ Spencer_Graves.html},
%  August 2009.
%\newblock conference presentation.

\bibitem[{Openoffice.org}(2009)]{CALC09MAN}
{Openoffice.org}.
\newblock \emph{Open Office Calc}.
\newblock Sun Microsystems, California, USA, 2009.
\newblock URL \url{http://www.openoffice.org}.

\bibitem[Ramsay et~al.(2009)Ramsay, Hooker, and Graves]{RHG09}
J.~Ramsay, G.~Hooker, and S.~Graves.
\newblock \emph{Functional Data Analysis with R and MATLAB}.
\newblock Springer, New York, 2009.

\bibitem[{R-Forge Team}(2009)]{RFORGE09URL}
S.~Theu\ss{}l and A.~Zeileis
\newblock "Collaborative software development using R-Forge".
\newblock \emph{The R Journal}.
\newblock 1(1):9--14.

\end{thebibliography}

\address{Spencer Graves \\
Structure Inspection and Monitoring \\
San Jose, CA} \\
\email{spencer.graves@prodsyse.com}

\address{Sundar Dorai-Raj \\
Google \\
Mountain View, CA} \\
\email{sdorairaj@google.com}

\address{Romain Fran\c{c}ois \\
Independent R Consultant \\
Montpellier, France} \\
\email{francoisromain@free.fr}

  %\bibliographystyle{Chicago}
  \bibliographystyle{abbrvnat}
%  \bibliography{sos}
\end{article}

\end{document}
