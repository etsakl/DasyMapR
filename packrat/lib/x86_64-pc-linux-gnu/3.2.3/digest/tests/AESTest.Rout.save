
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## tests for AES, taken from the examples in the manual page
> 
> stopifnot(require(digest))
Loading required package: digest
> 
> # FIPS-197 examples
> 
> hextextToRaw <- function(text) {
+   vals <- matrix(as.integer(as.hexmode(strsplit(text, "")[[1]])), ncol=2, byrow=TRUE)
+   vals <- vals %*% c(16, 1)
+   as.raw(vals)
+ }
> 
> plaintext       <- hextextToRaw("00112233445566778899aabbccddeeff")
> 
> aes128key       <- hextextToRaw("000102030405060708090a0b0c0d0e0f")
> aes128output    <- hextextToRaw("69c4e0d86a7b0430d8cdb78070b4c55a")
> aes <- AES(aes128key)
> aes128 <- aes$encrypt(plaintext)
> aes128
 [1] 69 c4 e0 d8 6a 7b 04 30 d8 cd b7 80 70 b4 c5 5a
> stopifnot(identical(aes128, aes128output))
> stopifnot(identical(plaintext, aes$decrypt(aes128, raw=TRUE)))
> 
> aes192key       <- hextextToRaw("000102030405060708090a0b0c0d0e0f1011121314151617")
> aes192output    <- hextextToRaw("dda97ca4864cdfe06eaf70a0ec0d7191")
> aes <- AES(aes192key)
> aes192 <- aes$encrypt(plaintext)
> aes192
 [1] dd a9 7c a4 86 4c df e0 6e af 70 a0 ec 0d 71 91
> stopifnot(identical(aes192, aes192output))
> stopifnot(identical(plaintext, aes$decrypt(aes192, raw=TRUE)))
> 
> aes256key       <- hextextToRaw("000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f")
> aes256output     <- hextextToRaw("8ea2b7ca516745bfeafc49904b496089")
> aes <- AES(aes256key)
> aes256 <- aes$encrypt(plaintext)
> aes256
 [1] 8e a2 b7 ca 51 67 45 bf ea fc 49 90 4b 49 60 89
> stopifnot(identical(aes256, aes256output))
> stopifnot(identical(plaintext, aes$decrypt(aes256, raw=TRUE)))
> 
> # SP800-38a examples
> 
> plaintext <- hextextToRaw(paste("6bc1bee22e409f96e93d7e117393172a",
+                                 "ae2d8a571e03ac9c9eb76fac45af8e51",
+                                 "30c81c46a35ce411e5fbc1191a0a52ef",
+                                 "f69f2445df4f9b17ad2b417be66c3710",sep=""))
> key <- hextextToRaw("2b7e151628aed2a6abf7158809cf4f3c")
> 
> ecb128output <- hextextToRaw(paste("3ad77bb40d7a3660a89ecaf32466ef97",
+                                    "f5d3d58503b9699de785895a96fdbaaf",
+                                    "43b1cd7f598ece23881b00e3ed030688",
+                                    "7b0c785e27e8ad3f8223207104725dd4",sep=""))
> aes <- AES(key)
> ecb128 <- aes$encrypt(plaintext)
> ecb128
 [1] 3a d7 7b b4 0d 7a 36 60 a8 9e ca f3 24 66 ef 97 f5 d3 d5 85 03 b9 69 9d e7
[26] 85 89 5a 96 fd ba af 43 b1 cd 7f 59 8e ce 23 88 1b 00 e3 ed 03 06 88 7b 0c
[51] 78 5e 27 e8 ad 3f 82 23 20 71 04 72 5d d4
> stopifnot(identical(ecb128, ecb128output))
> stopifnot(identical(plaintext, aes$decrypt(ecb128, raw=TRUE)))
> 
> cbc128output <- hextextToRaw(paste("7649abac8119b246cee98e9b12e9197d",
+                                     "5086cb9b507219ee95db113a917678b2",
+                                     "73bed6b8e3c1743b7116e69e22229516",
+                                     "3ff1caa1681fac09120eca307586e1a7",sep=""))
> iv <- hextextToRaw("000102030405060708090a0b0c0d0e0f")
> aes <- AES(key, mode="CBC", IV=iv)
> cbc128 <- aes$encrypt(plaintext)
> cbc128
 [1] 76 49 ab ac 81 19 b2 46 ce e9 8e 9b 12 e9 19 7d 50 86 cb 9b 50 72 19 ee 95
[26] db 11 3a 91 76 78 b2 73 be d6 b8 e3 c1 74 3b 71 16 e6 9e 22 22 95 16 3f f1
[51] ca a1 68 1f ac 09 12 0e ca 30 75 86 e1 a7
> stopifnot(identical(cbc128, cbc128output))
> aes <- AES(key, mode="CBC", IV=iv)
> stopifnot(identical(plaintext, aes$decrypt(cbc128, raw=TRUE)))
> 
> ctr128output <- hextextToRaw(paste("874d6191b620e3261bef6864990db6ce",
+                                    "9806f66b7970fdff8617187bb9fffdff",
+                                    "5ae4df3edbd5d35e5b4f09020db03eab",
+                                    "1e031dda2fbe03d1792170a0f3009cee",sep=""))
> iv <- hextextToRaw("f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff")
> aes <- AES(key, mode="CTR", IV=iv)
> ctr128 <- aes$encrypt(plaintext)
> ctr128
 [1] 87 4d 61 91 b6 20 e3 26 1b ef 68 64 99 0d b6 ce 98 06 f6 6b 79 70 fd ff 86
[26] 17 18 7b b9 ff fd ff 5a e4 df 3e db d5 d3 5e 5b 4f 09 02 0d b0 3e ab 1e 03
[51] 1d da 2f be 03 d1 79 21 70 a0 f3 00 9c ee
> stopifnot(identical(ctr128, ctr128output))
> aes <- AES(key, mode="CTR", IV=iv)
> stopifnot(identical(plaintext, aes$decrypt(ctr128, raw=TRUE)))
> 
> proc.time()
   user  system elapsed 
  0.324   0.020   0.179 
